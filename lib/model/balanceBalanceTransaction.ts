/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { BalanceStatus } from './balanceStatus';
import { BalanceType } from './balanceType';
import { DatabaseDeletedAt } from './databaseDeletedAt';

export class BalanceBalanceTransaction {
    /**
    * Gross amount of the transaction, in %s.
    */
    'amount'?: number;
    /**
    * The date the transaction\'s net funds will become available in the Stripe balance.
    */
    'availableOn'?: number;
    'createdAt'?: string;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency'?: string;
    'deletedAt'?: DatabaseDeletedAt;
    /**
    * An arbitrary string attached to the object. Often useful for displaying to users.
    */
    'description'?: string;
    /**
    * The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent\'s `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction\'s `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.
    */
    'exchangeRate'?: number;
    /**
    * Fees (in %s) paid for this transaction.
    */
    'fee'?: number;
    /**
    * Detailed breakdown of fees (in %s) paid for this transaction.
    */
    'feeDetails'?: Array<string>;
    'id'?: string;
    'livemode'?: boolean;
    'metadata'?: object;
    /**
    * Net amount of the transaction, in %s.
    */
    'net'?: number;
    'object'?: string;
    /**
    * [Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.
    */
    'reportingCategory'?: string;
    'source'?: string;
    /**
    * If the transaction\'s net funds are available in the Stripe balance yet. Either `available` or `pending`.
    */
    'status'?: BalanceStatus;
    /**
    * Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.
    */
    'type'?: BalanceType;
    'updatedAt'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "availableOn",
            "baseName": "available_on",
            "type": "number"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "deletedAt",
            "baseName": "deleted_at",
            "type": "DatabaseDeletedAt"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "exchangeRate",
            "baseName": "exchange_rate",
            "type": "number"
        },
        {
            "name": "fee",
            "baseName": "fee",
            "type": "number"
        },
        {
            "name": "feeDetails",
            "baseName": "fee_details",
            "type": "Array<string>"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "object"
        },
        {
            "name": "net",
            "baseName": "net",
            "type": "number"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "string"
        },
        {
            "name": "reportingCategory",
            "baseName": "reporting_category",
            "type": "string"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "BalanceStatus"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "BalanceType"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return BalanceBalanceTransaction.attributeTypeMap;
    }
}

