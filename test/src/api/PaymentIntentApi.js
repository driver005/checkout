/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import IntentPaymentIntent from '../model/IntentPaymentIntent';

/**
* PaymentIntent service.
* @module api/PaymentIntentApi
* @version 2.0
*/
export default class PaymentIntentApi {

    /**
    * Constructs a new PaymentIntentApi. 
    * @alias module:api/PaymentIntentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1PaymentIntentsGet operation.
     * @callback module:api/PaymentIntentApi~v1PaymentIntentsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/IntentPaymentIntent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get all existing PaymentIntents
     * Get all existing PaymentIntents.
     * @param {module:api/PaymentIntentApi~v1PaymentIntentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/IntentPaymentIntent>}
     */
    v1PaymentIntentsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [IntentPaymentIntent];
      return this.apiClient.callApi(
        '/v1/payment_intents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1PaymentIntentsIdDelete operation.
     * @callback module:api/PaymentIntentApi~v1PaymentIntentsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete PaymentIntent by given ID
     * Delete PaymentIntent by given ID.
     * @param {String} id PaymentIntent ID
     * @param {module:api/PaymentIntentApi~v1PaymentIntentsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    v1PaymentIntentsIdDelete(id, callback) {
      let postBody = id;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling v1PaymentIntentsIdDelete");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/v1/payment_intents/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1PaymentIntentsIdGet operation.
     * @callback module:api/PaymentIntentApi~v1PaymentIntentsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntentPaymentIntent} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get PaymentIntent by given ID or 404 error.
     * Get PaymentIntent by given ID or 404 error.
     * @param {String} id PaymentIntent ID
     * @param {module:api/PaymentIntentApi~v1PaymentIntentsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntentPaymentIntent}
     */
    v1PaymentIntentsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling v1PaymentIntentsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IntentPaymentIntent;
      return this.apiClient.callApi(
        '/v1/payment_intents/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1PaymentIntentsIdPost operation.
     * @callback module:api/PaymentIntentApi~v1PaymentIntentsIdPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntentPaymentIntent} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * update PaymentIntent
     * Update PaymentIntent.
     * @param {String} id PaymentIntent ID
     * @param {module:api/PaymentIntentApi~v1PaymentIntentsIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntentPaymentIntent}
     */
    v1PaymentIntentsIdPost(id, callback) {
      let postBody = id;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling v1PaymentIntentsIdPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IntentPaymentIntent;
      return this.apiClient.callApi(
        '/v1/payment_intents/{id}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1PaymentIntentsPost operation.
     * @callback module:api/PaymentIntentApi~v1PaymentIntentsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntentPaymentIntent} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a new PaymentIntent
     * Create a new PaymentIntent.
     * @param {module:api/PaymentIntentApi~v1PaymentIntentsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntentPaymentIntent}
     */
    v1PaymentIntentsPost(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IntentPaymentIntent;
      return this.apiClient.callApi(
        '/v1/payment_intents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
