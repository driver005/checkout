/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ItemLineItem from '../model/ItemLineItem';

/**
* LineItem service.
* @module api/LineItemApi
* @version 2.0
*/
export default class LineItemApi {

    /**
    * Constructs a new LineItemApi. 
    * @alias module:api/LineItemApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1CreditNotesGet operation.
     * @callback module:api/LineItemApi~v1CreditNotesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ItemLineItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get all existing LineItems
     * Get all existing LineItems.
     * @param {module:api/LineItemApi~v1CreditNotesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ItemLineItem>}
     */
    v1CreditNotesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ItemLineItem];
      return this.apiClient.callApi(
        '/v1/credit_notes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1CreditNotesIdDelete operation.
     * @callback module:api/LineItemApi~v1CreditNotesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete LineItem by given ID
     * Delete LineItem by given ID.
     * @param {String} id LineItem ID
     * @param {module:api/LineItemApi~v1CreditNotesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    v1CreditNotesIdDelete(id, callback) {
      let postBody = id;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling v1CreditNotesIdDelete");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/v1/credit_notes/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1CreditNotesIdGet operation.
     * @callback module:api/LineItemApi~v1CreditNotesIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemLineItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get LineItem by given ID or 404 error.
     * Get LineItem by given ID or 404 error.
     * @param {String} id LineItem ID
     * @param {module:api/LineItemApi~v1CreditNotesIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemLineItem}
     */
    v1CreditNotesIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling v1CreditNotesIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemLineItem;
      return this.apiClient.callApi(
        '/v1/credit_notes/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1CreditNotesIdPost operation.
     * @callback module:api/LineItemApi~v1CreditNotesIdPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemLineItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * update LineItem
     * Update LineItem.
     * @param {String} id LineItem ID
     * @param {module:api/LineItemApi~v1CreditNotesIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemLineItem}
     */
    v1CreditNotesIdPost(id, callback) {
      let postBody = id;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling v1CreditNotesIdPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ItemLineItem;
      return this.apiClient.callApi(
        '/v1/credit_notes/{id}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1CreditNotesPost operation.
     * @callback module:api/LineItemApi~v1CreditNotesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemLineItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a new LineItem
     * Create a new LineItem.
     * @param {module:api/LineItemApi~v1CreditNotesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemLineItem}
     */
    v1CreditNotesPost(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemLineItem;
      return this.apiClient.callApi(
        '/v1/credit_notes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
