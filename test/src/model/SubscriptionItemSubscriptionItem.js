/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseDeletedAt from './DatabaseDeletedAt';

/**
 * The SubscriptionItemSubscriptionItem model module.
 * @module model/SubscriptionItemSubscriptionItem
 * @version 2.0
 */
class SubscriptionItemSubscriptionItem {
    /**
     * Constructs a new <code>SubscriptionItemSubscriptionItem</code>.
     * @alias module:model/SubscriptionItemSubscriptionItem
     */
    constructor() { 
        
        SubscriptionItemSubscriptionItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionItemSubscriptionItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionItemSubscriptionItem} obj Optional instance to populate.
     * @return {module:model/SubscriptionItemSubscriptionItem} The populated <code>SubscriptionItemSubscriptionItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionItemSubscriptionItem();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = DatabaseDeletedAt.constructFromObject(data['deleted_at']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('subscription')) {
                obj['subscription'] = ApiClient.convertToType(data['subscription'], 'String');
            }
            if (data.hasOwnProperty('tax_rates')) {
                obj['tax_rates'] = ApiClient.convertToType(data['tax_rates'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionItemSubscriptionItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionItemSubscriptionItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // validate the optional field `deleted_at`
        if (data['deleted_at']) { // data not null
          DatabaseDeletedAt.validateJSON(data['deleted_at']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['price'] && !(typeof data['price'] === 'string' || data['price'] instanceof String)) {
            throw new Error("Expected the field `price` to be a primitive type in the JSON string but got " + data['price']);
        }
        // ensure the json data is a string
        if (data['subscription'] && !(typeof data['subscription'] === 'string' || data['subscription'] instanceof String)) {
            throw new Error("Expected the field `subscription` to be a primitive type in the JSON string but got " + data['subscription']);
        }
        // ensure the json data is a string
        if (data['tax_rates'] && !(typeof data['tax_rates'] === 'string' || data['tax_rates'] instanceof String)) {
            throw new Error("Expected the field `tax_rates` to be a primitive type in the JSON string but got " + data['tax_rates']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {String} created_at
 */
SubscriptionItemSubscriptionItem.prototype['created_at'] = undefined;

/**
 * @member {module:model/DatabaseDeletedAt} deleted_at
 */
SubscriptionItemSubscriptionItem.prototype['deleted_at'] = undefined;

/**
 * @member {String} id
 */
SubscriptionItemSubscriptionItem.prototype['id'] = undefined;

/**
 * @member {Boolean} livemode
 */
SubscriptionItemSubscriptionItem.prototype['livemode'] = undefined;

/**
 * @member {Object} metadata
 */
SubscriptionItemSubscriptionItem.prototype['metadata'] = undefined;

/**
 * @member {String} object
 */
SubscriptionItemSubscriptionItem.prototype['object'] = undefined;

/**
 * @member {String} price
 */
SubscriptionItemSubscriptionItem.prototype['price'] = undefined;

/**
 * The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.
 * @member {Number} quantity
 */
SubscriptionItemSubscriptionItem.prototype['quantity'] = undefined;

/**
 * @member {String} subscription
 */
SubscriptionItemSubscriptionItem.prototype['subscription'] = undefined;

/**
 * The tax rates which apply to this `subscription_item`. When set, the `default_tax_rates` on the subscription do not apply to this `subscription_item`.
 * @member {String} tax_rates
 */
SubscriptionItemSubscriptionItem.prototype['tax_rates'] = undefined;

/**
 * @member {String} updated_at
 */
SubscriptionItemSubscriptionItem.prototype['updated_at'] = undefined;






export default SubscriptionItemSubscriptionItem;

