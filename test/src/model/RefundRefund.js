/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseDeletedAt from './DatabaseDeletedAt';
import RefundFailureReason from './RefundFailureReason';
import RefundReason from './RefundReason';
import RefundStatus from './RefundStatus';

/**
 * The RefundRefund model module.
 * @module model/RefundRefund
 * @version 2.0
 */
class RefundRefund {
    /**
     * Constructs a new <code>RefundRefund</code>.
     * @alias module:model/RefundRefund
     */
    constructor() { 
        
        RefundRefund.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RefundRefund</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RefundRefund} obj Optional instance to populate.
     * @return {module:model/RefundRefund} The populated <code>RefundRefund</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RefundRefund();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('balance_transaction')) {
                obj['balance_transaction'] = ApiClient.convertToType(data['balance_transaction'], 'String');
            }
            if (data.hasOwnProperty('charge')) {
                obj['charge'] = ApiClient.convertToType(data['charge'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = DatabaseDeletedAt.constructFromObject(data['deleted_at']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('failure_balance_transaction')) {
                obj['failure_balance_transaction'] = ApiClient.convertToType(data['failure_balance_transaction'], 'String');
            }
            if (data.hasOwnProperty('failure_reason')) {
                obj['failure_reason'] = RefundFailureReason.constructFromObject(data['failure_reason']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('instructions_email')) {
                obj['instructions_email'] = ApiClient.convertToType(data['instructions_email'], 'String');
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('next_action')) {
                obj['next_action'] = ApiClient.convertToType(data['next_action'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('payment_intent')) {
                obj['payment_intent'] = ApiClient.convertToType(data['payment_intent'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = RefundReason.constructFromObject(data['reason']);
            }
            if (data.hasOwnProperty('receipt_number')) {
                obj['receipt_number'] = ApiClient.convertToType(data['receipt_number'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = RefundStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RefundRefund</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RefundRefund</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['balance_transaction'] && !(typeof data['balance_transaction'] === 'string' || data['balance_transaction'] instanceof String)) {
            throw new Error("Expected the field `balance_transaction` to be a primitive type in the JSON string but got " + data['balance_transaction']);
        }
        // ensure the json data is a string
        if (data['charge'] && !(typeof data['charge'] === 'string' || data['charge'] instanceof String)) {
            throw new Error("Expected the field `charge` to be a primitive type in the JSON string but got " + data['charge']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // validate the optional field `deleted_at`
        if (data['deleted_at']) { // data not null
          DatabaseDeletedAt.validateJSON(data['deleted_at']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['failure_balance_transaction'] && !(typeof data['failure_balance_transaction'] === 'string' || data['failure_balance_transaction'] instanceof String)) {
            throw new Error("Expected the field `failure_balance_transaction` to be a primitive type in the JSON string but got " + data['failure_balance_transaction']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['instructions_email'] && !(typeof data['instructions_email'] === 'string' || data['instructions_email'] instanceof String)) {
            throw new Error("Expected the field `instructions_email` to be a primitive type in the JSON string but got " + data['instructions_email']);
        }
        // ensure the json data is a string
        if (data['next_action'] && !(typeof data['next_action'] === 'string' || data['next_action'] instanceof String)) {
            throw new Error("Expected the field `next_action` to be a primitive type in the JSON string but got " + data['next_action']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['payment_intent'] && !(typeof data['payment_intent'] === 'string' || data['payment_intent'] instanceof String)) {
            throw new Error("Expected the field `payment_intent` to be a primitive type in the JSON string but got " + data['payment_intent']);
        }
        // ensure the json data is a string
        if (data['receipt_number'] && !(typeof data['receipt_number'] === 'string' || data['receipt_number'] instanceof String)) {
            throw new Error("Expected the field `receipt_number` to be a primitive type in the JSON string but got " + data['receipt_number']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {Number} amount
 */
RefundRefund.prototype['amount'] = undefined;

/**
 * @member {String} balance_transaction
 */
RefundRefund.prototype['balance_transaction'] = undefined;

/**
 * @member {String} charge
 */
RefundRefund.prototype['charge'] = undefined;

/**
 * @member {String} created_at
 */
RefundRefund.prototype['created_at'] = undefined;

/**
 * @member {String} currency
 */
RefundRefund.prototype['currency'] = undefined;

/**
 * @member {module:model/DatabaseDeletedAt} deleted_at
 */
RefundRefund.prototype['deleted_at'] = undefined;

/**
 * @member {String} description
 */
RefundRefund.prototype['description'] = undefined;

/**
 * @member {String} failure_balance_transaction
 */
RefundRefund.prototype['failure_balance_transaction'] = undefined;

/**
 * @member {module:model/RefundFailureReason} failure_reason
 */
RefundRefund.prototype['failure_reason'] = undefined;

/**
 * @member {String} id
 */
RefundRefund.prototype['id'] = undefined;

/**
 * @member {String} instructions_email
 */
RefundRefund.prototype['instructions_email'] = undefined;

/**
 * @member {Boolean} livemode
 */
RefundRefund.prototype['livemode'] = undefined;

/**
 * @member {Object} metadata
 */
RefundRefund.prototype['metadata'] = undefined;

/**
 * @member {String} next_action
 */
RefundRefund.prototype['next_action'] = undefined;

/**
 * @member {String} object
 */
RefundRefund.prototype['object'] = undefined;

/**
 * @member {String} payment_intent
 */
RefundRefund.prototype['payment_intent'] = undefined;

/**
 * @member {module:model/RefundReason} reason
 */
RefundRefund.prototype['reason'] = undefined;

/**
 * @member {String} receipt_number
 */
RefundRefund.prototype['receipt_number'] = undefined;

/**
 * @member {module:model/RefundStatus} status
 */
RefundRefund.prototype['status'] = undefined;

/**
 * @member {String} updated_at
 */
RefundRefund.prototype['updated_at'] = undefined;






export default RefundRefund;

