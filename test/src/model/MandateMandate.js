/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseDeletedAt from './DatabaseDeletedAt';
import MandateStatus from './MandateStatus';
import MandateType from './MandateType';

/**
 * The MandateMandate model module.
 * @module model/MandateMandate
 * @version 2.0
 */
class MandateMandate {
    /**
     * Constructs a new <code>MandateMandate</code>.
     * @alias module:model/MandateMandate
     */
    constructor() { 
        
        MandateMandate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MandateMandate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MandateMandate} obj Optional instance to populate.
     * @return {module:model/MandateMandate} The populated <code>MandateMandate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MandateMandate();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = DatabaseDeletedAt.constructFromObject(data['deleted_at']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('payment_method')) {
                obj['payment_method'] = ApiClient.convertToType(data['payment_method'], 'String');
            }
            if (data.hasOwnProperty('payment_method_details')) {
                obj['payment_method_details'] = ApiClient.convertToType(data['payment_method_details'], 'String');
            }
            if (data.hasOwnProperty('single_use')) {
                obj['single_use'] = ApiClient.convertToType(data['single_use'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = MandateStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = MandateType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MandateMandate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MandateMandate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // validate the optional field `deleted_at`
        if (data['deleted_at']) { // data not null
          DatabaseDeletedAt.validateJSON(data['deleted_at']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['payment_method'] && !(typeof data['payment_method'] === 'string' || data['payment_method'] instanceof String)) {
            throw new Error("Expected the field `payment_method` to be a primitive type in the JSON string but got " + data['payment_method']);
        }
        // ensure the json data is a string
        if (data['payment_method_details'] && !(typeof data['payment_method_details'] === 'string' || data['payment_method_details'] instanceof String)) {
            throw new Error("Expected the field `payment_method_details` to be a primitive type in the JSON string but got " + data['payment_method_details']);
        }
        // ensure the json data is a string
        if (data['single_use'] && !(typeof data['single_use'] === 'string' || data['single_use'] instanceof String)) {
            throw new Error("Expected the field `single_use` to be a primitive type in the JSON string but got " + data['single_use']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {String} created_at
 */
MandateMandate.prototype['created_at'] = undefined;

/**
 * @member {module:model/DatabaseDeletedAt} deleted_at
 */
MandateMandate.prototype['deleted_at'] = undefined;

/**
 * @member {String} id
 */
MandateMandate.prototype['id'] = undefined;

/**
 * @member {Boolean} livemode
 */
MandateMandate.prototype['livemode'] = undefined;

/**
 * @member {Object} metadata
 */
MandateMandate.prototype['metadata'] = undefined;

/**
 * @member {String} object
 */
MandateMandate.prototype['object'] = undefined;

/**
 * @member {String} payment_method
 */
MandateMandate.prototype['payment_method'] = undefined;

/**
 * @member {String} payment_method_details
 */
MandateMandate.prototype['payment_method_details'] = undefined;

/**
 * @member {String} single_use
 */
MandateMandate.prototype['single_use'] = undefined;

/**
 * @member {module:model/MandateStatus} status
 */
MandateMandate.prototype['status'] = undefined;

/**
 * @member {module:model/MandateType} type
 */
MandateMandate.prototype['type'] = undefined;

/**
 * @member {String} updated_at
 */
MandateMandate.prototype['updated_at'] = undefined;






export default MandateMandate;

