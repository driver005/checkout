/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseDeletedAt from './DatabaseDeletedAt';
import FilePurpose from './FilePurpose';

/**
 * The FileFile model module.
 * @module model/FileFile
 * @version 2.0
 */
class FileFile {
    /**
     * Constructs a new <code>FileFile</code>.
     * @alias module:model/FileFile
     */
    constructor() { 
        
        FileFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileFile} obj Optional instance to populate.
     * @return {module:model/FileFile} The populated <code>FileFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileFile();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = DatabaseDeletedAt.constructFromObject(data['deleted_at']);
            }
            if (data.hasOwnProperty('expires_at')) {
                obj['expires_at'] = ApiClient.convertToType(data['expires_at'], 'Number');
            }
            if (data.hasOwnProperty('filename')) {
                obj['filename'] = ApiClient.convertToType(data['filename'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], 'String');
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('purpose')) {
                obj['purpose'] = ApiClient.convertToType(data['purpose'], FilePurpose);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // validate the optional field `deleted_at`
        if (data['deleted_at']) { // data not null
          DatabaseDeletedAt.validateJSON(data['deleted_at']);
        }
        // ensure the json data is a string
        if (data['filename'] && !(typeof data['filename'] === 'string' || data['filename'] instanceof String)) {
            throw new Error("Expected the field `filename` to be a primitive type in the JSON string but got " + data['filename']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['links'] && !(typeof data['links'] === 'string' || data['links'] instanceof String)) {
            throw new Error("Expected the field `links` to be a primitive type in the JSON string but got " + data['links']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // validate the optional field `purpose`
        if (data['purpose']) { // data not null
          FilePurpose.validateJSON(data['purpose']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} created_at
 */
FileFile.prototype['created_at'] = undefined;

/**
 * @member {module:model/DatabaseDeletedAt} deleted_at
 */
FileFile.prototype['deleted_at'] = undefined;

/**
 * The time at which the file expires and is no longer available in epoch seconds.
 * @member {Number} expires_at
 */
FileFile.prototype['expires_at'] = undefined;

/**
 * A filename for the file, suitable for saving to a filesystem.
 * @member {String} filename
 */
FileFile.prototype['filename'] = undefined;

/**
 * @member {String} id
 */
FileFile.prototype['id'] = undefined;

/**
 * @member {String} links
 */
FileFile.prototype['links'] = undefined;

/**
 * @member {Boolean} livemode
 */
FileFile.prototype['livemode'] = undefined;

/**
 * @member {Object} metadata
 */
FileFile.prototype['metadata'] = undefined;

/**
 * @member {String} object
 */
FileFile.prototype['object'] = undefined;

/**
 * The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.
 * @member {module:model/FilePurpose} purpose
 */
FileFile.prototype['purpose'] = undefined;

/**
 * The size in bytes of the file object.
 * @member {Number} size
 */
FileFile.prototype['size'] = undefined;

/**
 * A user friendly title for the document.
 * @member {String} title
 */
FileFile.prototype['title'] = undefined;

/**
 * The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or `png`).
 * @member {String} type
 */
FileFile.prototype['type'] = undefined;

/**
 * @member {String} updated_at
 */
FileFile.prototype['updated_at'] = undefined;

/**
 * The URL from which the file can be downloaded using your live secret API key.
 * @member {String} url
 */
FileFile.prototype['url'] = undefined;






export default FileFile;

