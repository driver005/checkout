/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseDeletedAt from './DatabaseDeletedAt';
import PriceBillingScheme from './PriceBillingScheme';
import PriceTaxBehavior from './PriceTaxBehavior';
import PriceTiersMode from './PriceTiersMode';
import PriceType from './PriceType';

/**
 * The PricePrice model module.
 * @module model/PricePrice
 * @version 2.0
 */
class PricePrice {
    /**
     * Constructs a new <code>PricePrice</code>.
     * @alias module:model/PricePrice
     */
    constructor() { 
        
        PricePrice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PricePrice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PricePrice} obj Optional instance to populate.
     * @return {module:model/PricePrice} The populated <code>PricePrice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PricePrice();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('billing_scheme')) {
                obj['billing_scheme'] = PriceBillingScheme.constructFromObject(data['billing_scheme']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = DatabaseDeletedAt.constructFromObject(data['deleted_at']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], 'Boolean');
            }
            if (data.hasOwnProperty('lookup_key')) {
                obj['lookup_key'] = ApiClient.convertToType(data['lookup_key'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('nickname')) {
                obj['nickname'] = ApiClient.convertToType(data['nickname'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ApiClient.convertToType(data['product'], 'String');
            }
            if (data.hasOwnProperty('recurring')) {
                obj['recurring'] = ApiClient.convertToType(data['recurring'], 'String');
            }
            if (data.hasOwnProperty('tax_behavior')) {
                obj['tax_behavior'] = PriceTaxBehavior.constructFromObject(data['tax_behavior']);
            }
            if (data.hasOwnProperty('tiers')) {
                obj['tiers'] = ApiClient.convertToType(data['tiers'], ['String']);
            }
            if (data.hasOwnProperty('tiers_mode')) {
                obj['tiers_mode'] = PriceTiersMode.constructFromObject(data['tiers_mode']);
            }
            if (data.hasOwnProperty('transform_quantity')) {
                obj['transform_quantity'] = ApiClient.convertToType(data['transform_quantity'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = PriceType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('unit_amount')) {
                obj['unit_amount'] = ApiClient.convertToType(data['unit_amount'], 'Number');
            }
            if (data.hasOwnProperty('unit_amount_decimal')) {
                obj['unit_amount_decimal'] = ApiClient.convertToType(data['unit_amount_decimal'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PricePrice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PricePrice</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // validate the optional field `deleted_at`
        if (data['deleted_at']) { // data not null
          DatabaseDeletedAt.validateJSON(data['deleted_at']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lookup_key'] && !(typeof data['lookup_key'] === 'string' || data['lookup_key'] instanceof String)) {
            throw new Error("Expected the field `lookup_key` to be a primitive type in the JSON string but got " + data['lookup_key']);
        }
        // ensure the json data is a string
        if (data['nickname'] && !(typeof data['nickname'] === 'string' || data['nickname'] instanceof String)) {
            throw new Error("Expected the field `nickname` to be a primitive type in the JSON string but got " + data['nickname']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['product'] && !(typeof data['product'] === 'string' || data['product'] instanceof String)) {
            throw new Error("Expected the field `product` to be a primitive type in the JSON string but got " + data['product']);
        }
        // ensure the json data is a string
        if (data['recurring'] && !(typeof data['recurring'] === 'string' || data['recurring'] instanceof String)) {
            throw new Error("Expected the field `recurring` to be a primitive type in the JSON string but got " + data['recurring']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tiers'])) {
            throw new Error("Expected the field `tiers` to be an array in the JSON data but got " + data['tiers']);
        }
        // ensure the json data is a string
        if (data['transform_quantity'] && !(typeof data['transform_quantity'] === 'string' || data['transform_quantity'] instanceof String)) {
            throw new Error("Expected the field `transform_quantity` to be a primitive type in the JSON string but got " + data['transform_quantity']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {Boolean} active
 */
PricePrice.prototype['active'] = undefined;

/**
 * @member {module:model/PriceBillingScheme} billing_scheme
 */
PricePrice.prototype['billing_scheme'] = undefined;

/**
 * @member {String} created_at
 */
PricePrice.prototype['created_at'] = undefined;

/**
 * @member {String} currency
 */
PricePrice.prototype['currency'] = undefined;

/**
 * @member {module:model/DatabaseDeletedAt} deleted_at
 */
PricePrice.prototype['deleted_at'] = undefined;

/**
 * @member {String} id
 */
PricePrice.prototype['id'] = undefined;

/**
 * @member {Boolean} livemode
 */
PricePrice.prototype['livemode'] = undefined;

/**
 * @member {String} lookup_key
 */
PricePrice.prototype['lookup_key'] = undefined;

/**
 * @member {Object} metadata
 */
PricePrice.prototype['metadata'] = undefined;

/**
 * @member {String} nickname
 */
PricePrice.prototype['nickname'] = undefined;

/**
 * @member {String} object
 */
PricePrice.prototype['object'] = undefined;

/**
 * @member {String} product
 */
PricePrice.prototype['product'] = undefined;

/**
 * @member {String} recurring
 */
PricePrice.prototype['recurring'] = undefined;

/**
 * @member {module:model/PriceTaxBehavior} tax_behavior
 */
PricePrice.prototype['tax_behavior'] = undefined;

/**
 * @member {Array.<String>} tiers
 */
PricePrice.prototype['tiers'] = undefined;

/**
 * @member {module:model/PriceTiersMode} tiers_mode
 */
PricePrice.prototype['tiers_mode'] = undefined;

/**
 * @member {String} transform_quantity
 */
PricePrice.prototype['transform_quantity'] = undefined;

/**
 * @member {module:model/PriceType} type
 */
PricePrice.prototype['type'] = undefined;

/**
 * @member {Number} unit_amount
 */
PricePrice.prototype['unit_amount'] = undefined;

/**
 * @member {Number} unit_amount_decimal
 */
PricePrice.prototype['unit_amount_decimal'] = undefined;

/**
 * @member {String} updated_at
 */
PricePrice.prototype['updated_at'] = undefined;






export default PricePrice;

