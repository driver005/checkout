/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseDeletedAt from './DatabaseDeletedAt';

/**
 * The SubscriptionScheduleSubscriptionSchedule model module.
 * @module model/SubscriptionScheduleSubscriptionSchedule
 * @version 2.0
 */
class SubscriptionScheduleSubscriptionSchedule {
    /**
     * Constructs a new <code>SubscriptionScheduleSubscriptionSchedule</code>.
     * @alias module:model/SubscriptionScheduleSubscriptionSchedule
     */
    constructor() { 
        
        SubscriptionScheduleSubscriptionSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionScheduleSubscriptionSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionScheduleSubscriptionSchedule} obj Optional instance to populate.
     * @return {module:model/SubscriptionScheduleSubscriptionSchedule} The populated <code>SubscriptionScheduleSubscriptionSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionScheduleSubscriptionSchedule();

            if (data.hasOwnProperty('canceled_at')) {
                obj['canceled_at'] = ApiClient.convertToType(data['canceled_at'], 'Number');
            }
            if (data.hasOwnProperty('completed_at')) {
                obj['completed_at'] = ApiClient.convertToType(data['completed_at'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = ApiClient.convertToType(data['customer'], 'String');
            }
            if (data.hasOwnProperty('default_settings')) {
                obj['default_settings'] = ApiClient.convertToType(data['default_settings'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = DatabaseDeletedAt.constructFromObject(data['deleted_at']);
            }
            if (data.hasOwnProperty('end_behavior')) {
                obj['end_behavior'] = ApiClient.convertToType(data['end_behavior'], 'String');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('phases')) {
                obj['phases'] = ApiClient.convertToType(data['phases'], 'String');
            }
            if (data.hasOwnProperty('released_at')) {
                obj['released_at'] = ApiClient.convertToType(data['released_at'], 'String');
            }
            if (data.hasOwnProperty('released_subscription')) {
                obj['released_subscription'] = ApiClient.convertToType(data['released_subscription'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionScheduleSubscriptionSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionScheduleSubscriptionSchedule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['customer'] && !(typeof data['customer'] === 'string' || data['customer'] instanceof String)) {
            throw new Error("Expected the field `customer` to be a primitive type in the JSON string but got " + data['customer']);
        }
        // ensure the json data is a string
        if (data['default_settings'] && !(typeof data['default_settings'] === 'string' || data['default_settings'] instanceof String)) {
            throw new Error("Expected the field `default_settings` to be a primitive type in the JSON string but got " + data['default_settings']);
        }
        // validate the optional field `deleted_at`
        if (data['deleted_at']) { // data not null
          DatabaseDeletedAt.validateJSON(data['deleted_at']);
        }
        // ensure the json data is a string
        if (data['end_behavior'] && !(typeof data['end_behavior'] === 'string' || data['end_behavior'] instanceof String)) {
            throw new Error("Expected the field `end_behavior` to be a primitive type in the JSON string but got " + data['end_behavior']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['phases'] && !(typeof data['phases'] === 'string' || data['phases'] instanceof String)) {
            throw new Error("Expected the field `phases` to be a primitive type in the JSON string but got " + data['phases']);
        }
        // ensure the json data is a string
        if (data['released_at'] && !(typeof data['released_at'] === 'string' || data['released_at'] instanceof String)) {
            throw new Error("Expected the field `released_at` to be a primitive type in the JSON string but got " + data['released_at']);
        }
        // ensure the json data is a string
        if (data['released_subscription'] && !(typeof data['released_subscription'] === 'string' || data['released_subscription'] instanceof String)) {
            throw new Error("Expected the field `released_subscription` to be a primitive type in the JSON string but got " + data['released_subscription']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch.
 * @member {Number} canceled_at
 */
SubscriptionScheduleSubscriptionSchedule.prototype['canceled_at'] = undefined;

/**
 * Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.
 * @member {Number} completed_at
 */
SubscriptionScheduleSubscriptionSchedule.prototype['completed_at'] = undefined;

/**
 * @member {String} created_at
 */
SubscriptionScheduleSubscriptionSchedule.prototype['created_at'] = undefined;

/**
 * @member {String} customer
 */
SubscriptionScheduleSubscriptionSchedule.prototype['customer'] = undefined;

/**
 * @member {String} default_settings
 */
SubscriptionScheduleSubscriptionSchedule.prototype['default_settings'] = undefined;

/**
 * @member {module:model/DatabaseDeletedAt} deleted_at
 */
SubscriptionScheduleSubscriptionSchedule.prototype['deleted_at'] = undefined;

/**
 * Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running.`cancel` will end the subscription schedule and cancel the underlying subscription.
 * @member {String} end_behavior
 */
SubscriptionScheduleSubscriptionSchedule.prototype['end_behavior'] = undefined;

/**
 * The end of this phase of the subscription schedule.
 * @member {Number} end_date
 */
SubscriptionScheduleSubscriptionSchedule.prototype['end_date'] = undefined;

/**
 * @member {String} id
 */
SubscriptionScheduleSubscriptionSchedule.prototype['id'] = undefined;

/**
 * @member {Boolean} livemode
 */
SubscriptionScheduleSubscriptionSchedule.prototype['livemode'] = undefined;

/**
 * @member {Object} metadata
 */
SubscriptionScheduleSubscriptionSchedule.prototype['metadata'] = undefined;

/**
 * @member {String} object
 */
SubscriptionScheduleSubscriptionSchedule.prototype['object'] = undefined;

/**
 * Configuration for the subscription schedule's phases.
 * @member {String} phases
 */
SubscriptionScheduleSubscriptionSchedule.prototype['phases'] = undefined;

/**
 * Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.
 * @member {String} released_at
 */
SubscriptionScheduleSubscriptionSchedule.prototype['released_at'] = undefined;

/**
 * ID of the subscription once managed by the subscription schedule (if it is released).
 * @member {String} released_subscription
 */
SubscriptionScheduleSubscriptionSchedule.prototype['released_subscription'] = undefined;

/**
 * The start of this phase of the subscription schedule.
 * @member {Number} start_date
 */
SubscriptionScheduleSubscriptionSchedule.prototype['start_date'] = undefined;

/**
 * The present status of the subscription schedule. Possible values are `not_started`, `active`, `completed`, `released`, and `canceled`. You can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).
 * @member {String} status
 */
SubscriptionScheduleSubscriptionSchedule.prototype['status'] = undefined;

/**
 * @member {String} updated_at
 */
SubscriptionScheduleSubscriptionSchedule.prototype['updated_at'] = undefined;






export default SubscriptionScheduleSubscriptionSchedule;

