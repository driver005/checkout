/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseDeletedAt from './DatabaseDeletedAt';

/**
 * The InvoiceItemInvoiceitem model module.
 * @module model/InvoiceItemInvoiceitem
 * @version 2.0
 */
class InvoiceItemInvoiceitem {
    /**
     * Constructs a new <code>InvoiceItemInvoiceitem</code>.
     * @alias module:model/InvoiceItemInvoiceitem
     */
    constructor() { 
        
        InvoiceItemInvoiceitem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceItemInvoiceitem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceItemInvoiceitem} obj Optional instance to populate.
     * @return {module:model/InvoiceItemInvoiceitem} The populated <code>InvoiceItemInvoiceitem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceItemInvoiceitem();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = ApiClient.convertToType(data['customer'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Number');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = DatabaseDeletedAt.constructFromObject(data['deleted_at']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('discountable')) {
                obj['discountable'] = ApiClient.convertToType(data['discountable'], 'Boolean');
            }
            if (data.hasOwnProperty('discounts')) {
                obj['discounts'] = ApiClient.convertToType(data['discounts'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('invoice')) {
                obj['invoice'] = ApiClient.convertToType(data['invoice'], 'String');
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('period_end')) {
                obj['period_end'] = ApiClient.convertToType(data['period_end'], 'Number');
            }
            if (data.hasOwnProperty('period_start')) {
                obj['period_start'] = ApiClient.convertToType(data['period_start'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('proration')) {
                obj['proration'] = ApiClient.convertToType(data['proration'], 'Boolean');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('subscription')) {
                obj['subscription'] = ApiClient.convertToType(data['subscription'], 'String');
            }
            if (data.hasOwnProperty('subscription_item')) {
                obj['subscription_item'] = ApiClient.convertToType(data['subscription_item'], 'String');
            }
            if (data.hasOwnProperty('tax_rates')) {
                obj['tax_rates'] = ApiClient.convertToType(data['tax_rates'], 'String');
            }
            if (data.hasOwnProperty('unit_amount')) {
                obj['unit_amount'] = ApiClient.convertToType(data['unit_amount'], 'Number');
            }
            if (data.hasOwnProperty('unit_amount_decimal')) {
                obj['unit_amount_decimal'] = ApiClient.convertToType(data['unit_amount_decimal'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceItemInvoiceitem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceItemInvoiceitem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['customer'] && !(typeof data['customer'] === 'string' || data['customer'] instanceof String)) {
            throw new Error("Expected the field `customer` to be a primitive type in the JSON string but got " + data['customer']);
        }
        // validate the optional field `deleted_at`
        if (data['deleted_at']) { // data not null
          DatabaseDeletedAt.validateJSON(data['deleted_at']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['discounts'])) {
            throw new Error("Expected the field `discounts` to be an array in the JSON data but got " + data['discounts']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['invoice'] && !(typeof data['invoice'] === 'string' || data['invoice'] instanceof String)) {
            throw new Error("Expected the field `invoice` to be a primitive type in the JSON string but got " + data['invoice']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['price'] && !(typeof data['price'] === 'string' || data['price'] instanceof String)) {
            throw new Error("Expected the field `price` to be a primitive type in the JSON string but got " + data['price']);
        }
        // ensure the json data is a string
        if (data['subscription'] && !(typeof data['subscription'] === 'string' || data['subscription'] instanceof String)) {
            throw new Error("Expected the field `subscription` to be a primitive type in the JSON string but got " + data['subscription']);
        }
        // ensure the json data is a string
        if (data['subscription_item'] && !(typeof data['subscription_item'] === 'string' || data['subscription_item'] instanceof String)) {
            throw new Error("Expected the field `subscription_item` to be a primitive type in the JSON string but got " + data['subscription_item']);
        }
        // ensure the json data is a string
        if (data['tax_rates'] && !(typeof data['tax_rates'] === 'string' || data['tax_rates'] instanceof String)) {
            throw new Error("Expected the field `tax_rates` to be a primitive type in the JSON string but got " + data['tax_rates']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * Amount (in the `currency` specified) of the invoice item. This should always be equal to `unit_amount * quantity`.
 * @member {Number} amount
 */
InvoiceItemInvoiceitem.prototype['amount'] = undefined;

/**
 * @member {String} created_at
 */
InvoiceItemInvoiceitem.prototype['created_at'] = undefined;

/**
 * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
 * @member {String} currency
 */
InvoiceItemInvoiceitem.prototype['currency'] = undefined;

/**
 * @member {String} customer
 */
InvoiceItemInvoiceitem.prototype['customer'] = undefined;

/**
 * Time at which the object was created. Measured in seconds since the Unix epoch.
 * @member {Number} date
 */
InvoiceItemInvoiceitem.prototype['date'] = undefined;

/**
 * @member {module:model/DatabaseDeletedAt} deleted_at
 */
InvoiceItemInvoiceitem.prototype['deleted_at'] = undefined;

/**
 * An arbitrary string attached to the object. Often useful for displaying to users.
 * @member {String} description
 */
InvoiceItemInvoiceitem.prototype['description'] = undefined;

/**
 * If true, discounts will apply to this invoice item. Always false for prorations.
 * @member {Boolean} discountable
 */
InvoiceItemInvoiceitem.prototype['discountable'] = undefined;

/**
 * The discounts which apply to the invoice item. Item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.
 * @member {Array.<String>} discounts
 */
InvoiceItemInvoiceitem.prototype['discounts'] = undefined;

/**
 * @member {String} id
 */
InvoiceItemInvoiceitem.prototype['id'] = undefined;

/**
 * @member {String} invoice
 */
InvoiceItemInvoiceitem.prototype['invoice'] = undefined;

/**
 * @member {Boolean} livemode
 */
InvoiceItemInvoiceitem.prototype['livemode'] = undefined;

/**
 * @member {Object} metadata
 */
InvoiceItemInvoiceitem.prototype['metadata'] = undefined;

/**
 * @member {String} object
 */
InvoiceItemInvoiceitem.prototype['object'] = undefined;

/**
 * Unique identifier for the object.
 * @member {Number} period_end
 */
InvoiceItemInvoiceitem.prototype['period_end'] = undefined;

/**
 * @member {Number} period_start
 */
InvoiceItemInvoiceitem.prototype['period_start'] = undefined;

/**
 * @member {String} price
 */
InvoiceItemInvoiceitem.prototype['price'] = undefined;

/**
 * Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.
 * @member {Boolean} proration
 */
InvoiceItemInvoiceitem.prototype['proration'] = undefined;

/**
 * Quantity of units for the invoice item. If the invoice item is a proration, the quantity of the subscription that the proration was computed for.
 * @member {Number} quantity
 */
InvoiceItemInvoiceitem.prototype['quantity'] = undefined;

/**
 * @member {String} subscription
 */
InvoiceItemInvoiceitem.prototype['subscription'] = undefined;

/**
 * @member {String} subscription_item
 */
InvoiceItemInvoiceitem.prototype['subscription_item'] = undefined;

/**
 * The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.
 * @member {String} tax_rates
 */
InvoiceItemInvoiceitem.prototype['tax_rates'] = undefined;

/**
 * Unit amount (in the `currency` specified) of the invoice item.
 * @member {Number} unit_amount
 */
InvoiceItemInvoiceitem.prototype['unit_amount'] = undefined;

/**
 * Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.
 * @member {Number} unit_amount_decimal
 */
InvoiceItemInvoiceitem.prototype['unit_amount_decimal'] = undefined;

/**
 * @member {String} updated_at
 */
InvoiceItemInvoiceitem.prototype['updated_at'] = undefined;






export default InvoiceItemInvoiceitem;

