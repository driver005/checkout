/**
 * Fiber Swagger Example API
 * This is a sample server server.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FiberSwaggerExampleApi);
  }
}(this, function(expect, FiberSwaggerExampleApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FiberSwaggerExampleApi.ChargeCharge();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ChargeCharge', function() {
    it('should create an instance of ChargeCharge', function() {
      // uncomment below and update the code to test ChargeCharge
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be.a(FiberSwaggerExampleApi.ChargeCharge);
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property amountCaptured (base name: "amount_captured")', function() {
      // uncomment below and update the code to test the property amountCaptured
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property amountRefunded (base name: "amount_refunded")', function() {
      // uncomment below and update the code to test the property amountRefunded
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property balanceTransaction (base name: "balance_transaction")', function() {
      // uncomment below and update the code to test the property balanceTransaction
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property billingDetails (base name: "billing_details")', function() {
      // uncomment below and update the code to test the property billingDetails
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property calculatedStatementDescriptor (base name: "calculated_statement_descriptor")', function() {
      // uncomment below and update the code to test the property calculatedStatementDescriptor
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property captured (base name: "captured")', function() {
      // uncomment below and update the code to test the property captured
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property deletedAt (base name: "deleted_at")', function() {
      // uncomment below and update the code to test the property deletedAt
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property disputed (base name: "disputed")', function() {
      // uncomment below and update the code to test the property disputed
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property failureBalanceTransaction (base name: "failure_balance_transaction")', function() {
      // uncomment below and update the code to test the property failureBalanceTransaction
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property failureCode (base name: "failure_code")', function() {
      // uncomment below and update the code to test the property failureCode
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property failureMessage (base name: "failure_message")', function() {
      // uncomment below and update the code to test the property failureMessage
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property fraudDetails (base name: "fraud_details")', function() {
      // uncomment below and update the code to test the property fraudDetails
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property livemode (base name: "livemode")', function() {
      // uncomment below and update the code to test the property livemode
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property object (base name: "object")', function() {
      // uncomment below and update the code to test the property object
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property outcome (base name: "outcome")', function() {
      // uncomment below and update the code to test the property outcome
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property paid (base name: "paid")', function() {
      // uncomment below and update the code to test the property paid
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "payment_method")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethodDetails (base name: "payment_method_details")', function() {
      // uncomment below and update the code to test the property paymentMethodDetails
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property radarOptions (base name: "radar_options")', function() {
      // uncomment below and update the code to test the property radarOptions
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property receiptEmail (base name: "receipt_email")', function() {
      // uncomment below and update the code to test the property receiptEmail
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property receiptNumber (base name: "receipt_number")', function() {
      // uncomment below and update the code to test the property receiptNumber
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property receiptUrl (base name: "receipt_url")', function() {
      // uncomment below and update the code to test the property receiptUrl
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property refunded (base name: "refunded")', function() {
      // uncomment below and update the code to test the property refunded
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property review (base name: "review")', function() {
      // uncomment below and update the code to test the property review
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property shipping (base name: "shipping")', function() {
      // uncomment below and update the code to test the property shipping
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property statementDescriptor (base name: "statement_descriptor")', function() {
      // uncomment below and update the code to test the property statementDescriptor
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property statementDescriptorSuffix (base name: "statement_descriptor_suffix")', function() {
      // uncomment below and update the code to test the property statementDescriptorSuffix
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new FiberSwaggerExampleApi.ChargeCharge();
      //expect(instance).to.be();
    });

  });

}));
